name: CI/CD Pipeline with testing

on:
  push:
    branches:
      - 99-realease-branch-via-aws

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: lucatum/nodejs-app-aws-backend:test

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: lucatum/nodejs-app-aws-frontend:test
          build-args: |
            REACT_APP_API_URL=http://backend:3001

      - name: Create test network
        run: docker network create test-network

      - name: Run containers
        run: |
          docker run -d --name backend --network test-network -p 3001:3001 lucatum/nodejs-app-aws-backend:test
          docker run -d --name frontend --network test-network -p 3000:80 lucatum/nodejs-app-aws-frontend:test

      - name: Wait for services to start
        run: |
          sleep 40s

      - name: Install Playwright
        run: |
          cd frontend
          npm ci
          npm install -g playwright
          npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npx playwright test --config=playwright.config.ts
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://frontend:3000

      - name: Cleanup
        if: always()
        run: |
          docker stop frontend backend
          docker rm frontend backend
          docker network rm test-network

  deploy:
    needs: build-and-test
    runs-on: self-hosted
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Pull latest images
        run: |
          docker pull lucatum/nodejs-app-aws-backend:test
          docker pull lucatum/nodejs-app-aws-frontend:test
      
      - name: Tag images for production
        run: |
          docker tag lucatum/nodejs-app-aws-backend:test lucatum/nodejs-app-aws-backend:latest
          docker tag lucatum/nodejs-app-aws-frontend:test lucatum/nodejs-app-aws-frontend:latest
      
      - name: Push production images
        run: |
          docker push lucatum/nodejs-app-aws-backend:latest
          docker push lucatum/nodejs-app-aws-frontend:latest
      
      - name: Stop and remove existing containers
        run: |
          docker stop nodejs-app-backend nodejs-app-frontend || true
          docker rm nodejs-app-backend nodejs-app-frontend || true
      
      - name: Run backend container
        run: |
          docker run -d --name nodejs-app-backend \
            -p 3001:3001 \
            -e MONGO_URL='${{ secrets.MONGO_URL }}' \
            -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            lucatum/nodejs-app-aws-backend:latest
      
      - name: Run frontend container
        run: |
          docker run -d --name nodejs-app-frontend \
            -p 80:80 \
            lucatum/nodejs-app-aws-frontend:latest
      
      - name: Cleanup old images
        run: docker image prune -af

      - name: Final deployment status
        run: |
          echo "Deployment completed"
          echo "Running containers:"
          docker ps
          echo "All images:"
          docker images